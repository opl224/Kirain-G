// This file is generated by Gemini.  For optimal performance, only make edits that are clearly marked.

'use server';

/**
 * @fileOverview Suggests relevant tags for a given post using an LLM.
 *
 * - suggestTags - A function that suggests tags for a given post.
 * - SuggestTagsInput - The input type for the suggestTags function.
 * - SuggestTagsOutput - The return type for the suggestTags function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestTagsInputSchema = z.object({
  postContent: z
    .string()
    .describe('The content of the post for which to suggest tags.'),
});
export type SuggestTagsInput = z.infer<typeof SuggestTagsInputSchema>;

const SuggestTagsOutputSchema = z.object({
  tags: z
    .array(z.string())
    .describe('An array of suggested tags for the post.'),
});
export type SuggestTagsOutput = z.infer<typeof SuggestTagsOutputSchema>;

export async function suggestTags(input: SuggestTagsInput): Promise<SuggestTagsOutput> {
  return suggestTagsFlow(input);
}

const suggestTagsPrompt = ai.definePrompt({
  name: 'suggestTagsPrompt',
  input: {schema: SuggestTagsInputSchema},
  output: {schema: SuggestTagsOutputSchema},
  prompt: `You are a social media expert. Given the following post content, suggest relevant tags to categorize the post. Only provide tags, comma separated.

Post Content: {{{postContent}}}`, // Ensure comma-separated format
});

const suggestTagsFlow = ai.defineFlow(
  {
    name: 'suggestTagsFlow',
    inputSchema: SuggestTagsInputSchema,
    outputSchema: SuggestTagsOutputSchema,
  },
  async input => {
    const {output} = await suggestTagsPrompt(input);
    // Split the comma-separated tags into an array and return.
    const tags = output?.tags || [];
    return { tags };
  }
);
